"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/checkout";
exports.ids = ["pages/api/checkout"];
exports.modules = {

/***/ "@solana/web3.js":
/*!**********************************!*\
  !*** external "@solana/web3.js" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@solana/web3.js");

/***/ }),

/***/ "bs58":
/*!***********************!*\
  !*** external "bs58" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("bs58");

/***/ }),

/***/ "@metaplex-foundation/js":
/*!******************************************!*\
  !*** external "@metaplex-foundation/js" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("@metaplex-foundation/js");;

/***/ }),

/***/ "@solana/spl-token":
/*!************************************!*\
  !*** external "@solana/spl-token" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@solana/spl-token");;

/***/ }),

/***/ "(api)/./pages/api/checkout.ts":
/*!*******************************!*\
  !*** ./pages/api/checkout.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"@solana/web3.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/spl-token */ \"@solana/spl-token\");\n/* harmony import */ var _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metaplex-foundation/js */ \"@metaplex-foundation/js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bs58 */ \"bs58\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__, _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__, _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// Update these variables!\n// This is returned by nft-upload/upload.js\nlet METADATA_URI = \"https://arweave.net/OZNYTG1Kh3b2p0RPpYCkchLiiAX_1po5PSvOCPSsu3s\";\nconst myAddress = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"GPaVkHjVRgDxzyqrK95RqcmEKRrfzwUnXGUwiDKq22vS\");\n// Devnet 'fake' USDC, you can get these tokens from https://spl-token-faucet.com/\nconst USDC_ADDRESS = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(\"Gh9ZwEmdLJ8DscKNTkTqPbNwLNNBjuSzaG9Vp2KGtKJr\");\n// Mainnet USDC, uncomment if using mainnet\n// const USDC_ADDRESS = new PublicKey(\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\")\n// Connection endpoint, switch to a mainnet RPC if using mainnet\nconst ENDPOINT = (0,_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.clusterApiUrl)('devnet');\n// This is the name your created NFT will have. Other metadata comes from METADATA_URI\nconst NFT_NAME = \"Video NFT\";\n// The amount to charge in USDC\nconst PRICE_USDC = 0.1;\nfunction get(res) {\n    res.status(200).json({\n        label: \"Video Wiki\",\n        icon: \"https://solana.com/src/img/branding/solanaLogoMark.svg\"\n    });\n}\nasync function postImpl(account) {\n    const connection = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Connection(ENDPOINT);\n    // Get the shop keypair from the environment variable\n    const shopPrivateKey = \"3rTqFycRK7URNXihwZheXG5i4byaY94fUXE9FdRCZsvjRzR7sGUGhGJsGQc3oV7nkJoHyTcA963qayq2dcvxtdsa\" /*process.env.SHOP_PRIVATE_KEY*/ ;\n    if (!shopPrivateKey) throw new Error('SHOP_PRIVATE_KEY not found');\n    const shopKeypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.fromSecretKey(bs58__WEBPACK_IMPORTED_MODULE_3___default().decode(shopPrivateKey));\n    // Initialise Metaplex with our shop keypair\n    const metaplex = _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__.Metaplex.make(connection).use((0,_metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__.keypairIdentity)(shopKeypair));\n    const nfts = metaplex.nfts();\n    // The mint needs to sign the transaction, so we generate a new keypair for it\n    const mintKeypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate();\n    // Create a transaction builder to create the NFT\n    const transactionBuilder = await nfts.builders().create({\n        uri: METADATA_URI,\n        name: NFT_NAME,\n        tokenOwner: account,\n        updateAuthority: shopKeypair,\n        sellerFeeBasisPoints: 100,\n        useNewMint: mintKeypair\n    });\n    // Next we create an instruction to transfer USDC from the buyer to the shop\n    // This will be added to the create NFT transaction\n    // Get the buyer's USDC address\n    const fromUsdcAddress = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.getOrCreateAssociatedTokenAccount)(connection, shopKeypair, USDC_ADDRESS, account);\n    // Get the shop's USDC address\n    const toUsdcAddress = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.getOrCreateAssociatedTokenAccount)(connection, shopKeypair, USDC_ADDRESS, myAddress);\n    const usdcMint = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.getMint)(connection, USDC_ADDRESS);\n    const decimals = usdcMint.decimals;\n    const usdcTransferInstruction = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_1__.createTransferCheckedInstruction)(fromUsdcAddress.address, USDC_ADDRESS, toUsdcAddress.address, account, PRICE_USDC * 10 ** decimals, decimals);\n    // Create a guest identity for buyer, so they will be a required signer for the transaction\n    const identitySigner = new _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_2__.GuestIdentityDriver(account);\n    // Add the USDC payment to the NFT transaction\n    transactionBuilder.prepend({\n        instruction: usdcTransferInstruction,\n        signers: [\n            identitySigner\n        ]\n    });\n    // transactionBuilder.setFeePayer(payerKeypair)\n    // Convert to transaction\n    const latestBlockhash = await connection.getLatestBlockhash();\n    const transaction = transactionBuilder.toTransaction(latestBlockhash);\n    // Partially sign the transaction, as the shop and the mint\n    // The account is also a required signer, but they'll sign it with their wallet after we return it\n    transaction.sign(shopKeypair, mintKeypair);\n    // Serialize the transaction and convert to base64 to return it\n    const serializedTransaction = transaction.serialize({\n        requireAllSignatures: false // account is a missing signature\n    });\n    const base64 = serializedTransaction.toString('base64');\n    const message = \"Mint your NFT Video!\";\n    // Return the serialized transaction\n    return {\n        transaction: base64,\n        message\n    };\n}\nasync function post(req, res) {\n    // const { query } = req;\n    // const { address, METADATA_URI } = query;\n    // res.end(`The address is ${address} and the METADATA_URI is ${METADATA_URI}`);\n    const { account  } = req.body;\n    console.log(req.body);\n    if (!account) {\n        res.status(400).json({\n            error: \"No account provided\"\n        });\n        return;\n    }\n    try {\n        const mintOutputData = await postImpl(new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(account));\n        res.status(200).json(mintOutputData);\n        return;\n    } catch (error) {\n        account;\n        console.error(error);\n        res.status(500).json({\n            error: 'error creating transaction'\n        });\n        return;\n    }\n}\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        console.log(req.body);\n        console.log(\"GET\");\n        return get(res);\n    } else if (req.method === \"POST\") {\n        console.log(req.body);\n        console.log(\"POST\");\n        return await post(req, res);\n    } else {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/checkout.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/checkout.ts"));
module.exports = __webpack_exports__;

})();